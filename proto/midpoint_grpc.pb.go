// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.3.0
// - protoc             v4.22.3
// source: proto/midpoint.proto

package grpc

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

const (
	MidpointService_GetMidpoint_FullMethodName = "/grpc.MidpointService/GetMidpoint"
)

// MidpointServiceClient is the client API for MidpointService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type MidpointServiceClient interface {
	GetMidpoint(ctx context.Context, in *MidpointRequest, opts ...grpc.CallOption) (MidpointService_GetMidpointClient, error)
}

type midpointServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewMidpointServiceClient(cc grpc.ClientConnInterface) MidpointServiceClient {
	return &midpointServiceClient{cc}
}

func (c *midpointServiceClient) GetMidpoint(ctx context.Context, in *MidpointRequest, opts ...grpc.CallOption) (MidpointService_GetMidpointClient, error) {
	stream, err := c.cc.NewStream(ctx, &MidpointService_ServiceDesc.Streams[0], MidpointService_GetMidpoint_FullMethodName, opts...)
	if err != nil {
		return nil, err
	}
	x := &midpointServiceGetMidpointClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type MidpointService_GetMidpointClient interface {
	Recv() (*MidpointResponse, error)
	grpc.ClientStream
}

type midpointServiceGetMidpointClient struct {
	grpc.ClientStream
}

func (x *midpointServiceGetMidpointClient) Recv() (*MidpointResponse, error) {
	m := new(MidpointResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// MidpointServiceServer is the server API for MidpointService service.
// All implementations must embed UnimplementedMidpointServiceServer
// for forward compatibility
type MidpointServiceServer interface {
	GetMidpoint(*MidpointRequest, MidpointService_GetMidpointServer) error
	mustEmbedUnimplementedMidpointServiceServer()
}

// UnimplementedMidpointServiceServer must be embedded to have forward compatible implementations.
type UnimplementedMidpointServiceServer struct {
}

func (UnimplementedMidpointServiceServer) GetMidpoint(*MidpointRequest, MidpointService_GetMidpointServer) error {
	return status.Errorf(codes.Unimplemented, "method GetMidpoint not implemented")
}
func (UnimplementedMidpointServiceServer) mustEmbedUnimplementedMidpointServiceServer() {}

// UnsafeMidpointServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to MidpointServiceServer will
// result in compilation errors.
type UnsafeMidpointServiceServer interface {
	mustEmbedUnimplementedMidpointServiceServer()
}

func RegisterMidpointServiceServer(s grpc.ServiceRegistrar, srv MidpointServiceServer) {
	s.RegisterService(&MidpointService_ServiceDesc, srv)
}

func _MidpointService_GetMidpoint_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(MidpointRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(MidpointServiceServer).GetMidpoint(m, &midpointServiceGetMidpointServer{stream})
}

type MidpointService_GetMidpointServer interface {
	Send(*MidpointResponse) error
	grpc.ServerStream
}

type midpointServiceGetMidpointServer struct {
	grpc.ServerStream
}

func (x *midpointServiceGetMidpointServer) Send(m *MidpointResponse) error {
	return x.ServerStream.SendMsg(m)
}

// MidpointService_ServiceDesc is the grpc.ServiceDesc for MidpointService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var MidpointService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "grpc.MidpointService",
	HandlerType: (*MidpointServiceServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "GetMidpoint",
			Handler:       _MidpointService_GetMidpoint_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "proto/midpoint.proto",
}
