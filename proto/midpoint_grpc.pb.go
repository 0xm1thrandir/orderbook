// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.3.0
// - protoc             v4.22.3
// source: proto/midpoint.proto

package pb

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

const (
	MidpointService_GetMidpoint_FullMethodName = "/grpc.MidpointService/GetMidpoint"
)

// MidpointServiceClient is the client API for MidpointService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type MidpointServiceClient interface {
	GetMidpoint(ctx context.Context, in *MidpointRequest, opts ...grpc.CallOption) (*MidpointResponse, error)
}

type midpointServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewMidpointServiceClient(cc grpc.ClientConnInterface) MidpointServiceClient {
	return &midpointServiceClient{cc}
}

func (c *midpointServiceClient) GetMidpoint(ctx context.Context, in *MidpointRequest, opts ...grpc.CallOption) (*MidpointResponse, error) {
	out := new(MidpointResponse)
	err := c.cc.Invoke(ctx, MidpointService_GetMidpoint_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MidpointServiceServer is the server API for MidpointService service.
// All implementations must embed UnimplementedMidpointServiceServer
// for forward compatibility
type MidpointServiceServer interface {
	GetMidpoint(context.Context, *MidpointRequest) (*MidpointResponse, error)
	mustEmbedUnimplementedMidpointServiceServer()
}

// UnimplementedMidpointServiceServer must be embedded to have forward compatible implementations.
type UnimplementedMidpointServiceServer struct {
}

func (UnimplementedMidpointServiceServer) GetMidpoint(context.Context, *MidpointRequest) (*MidpointResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetMidpoint not implemented")
}
func (UnimplementedMidpointServiceServer) mustEmbedUnimplementedMidpointServiceServer() {}

// UnsafeMidpointServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to MidpointServiceServer will
// result in compilation errors.
type UnsafeMidpointServiceServer interface {
	mustEmbedUnimplementedMidpointServiceServer()
}

func RegisterMidpointServiceServer(s grpc.ServiceRegistrar, srv MidpointServiceServer) {
	s.RegisterService(&MidpointService_ServiceDesc, srv)
}

func _MidpointService_GetMidpoint_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MidpointRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MidpointServiceServer).GetMidpoint(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: MidpointService_GetMidpoint_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MidpointServiceServer).GetMidpoint(ctx, req.(*MidpointRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// MidpointService_ServiceDesc is the grpc.ServiceDesc for MidpointService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var MidpointService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "grpc.MidpointService",
	HandlerType: (*MidpointServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetMidpoint",
			Handler:    _MidpointService_GetMidpoint_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/midpoint.proto",
}
